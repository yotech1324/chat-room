<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat-Room</title>
    <!-- <link rel="stylesheet" href="/server/views/stylesheets/index.css"> -->

</head>

<body>
    <div class="--dark-theme" id="chat">


        <!-- // diff code -->
        <div class="chat__conversation-board">


            <div class="menu">
                <h2> Chat-Room => </h2>
                <span> <b>You</b>, Nikhil, Ankit & Anshdeep
                </span>
            </div>
            <div class="message-wrap" id="all-messages"></div>
        </div>
        <div class="chat__conversation-panel">

            <div class="chat__conversation-panel__container">

                <input class="chat__conversation-panel__input panel-item" id="message"
                    placeholder="Type a message..." />
                <button id="sendBtn" type="submit"
                    class="chat__conversation-panel__button panel-item btn-icon send-message-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                        stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                        aria-hidden="true" data-reactid="1036">
                        <line x1="22" y1="2" x2="11" y2="13"></line>
                        <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
                    </svg>
                </button>
            </div>
        </div>
    </div>
    </div>

</body>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.12.0/qs.min.js"
    integrity="sha512-7guIquo9is/MQs1wfLZyVViTlsvrIoHdnSzoFmPvPMDpqjL2fvDqcVKpaZ9PS3Sbf6DLBRUUZ5X3jcQ/wotWow=="
    crossorigin="anonymous" referrerpolicy="no-referrer">
    </script>
<script src="/socket.io/socket.io.js"></script>
<script>

    const currentTime = new Date();
    // Get the current hour, minute, and second
    let hours = currentTime.getHours();
    let minutes = currentTime.getMinutes();

    let Minutes = minutes < 10 ? '0' + minutes : minutes;

    const seconds = currentTime.getSeconds();
    // Determine AM or PM
    const meridiem = hours >= 12 ? 'PM' : 'AM';

    // Convert hours to 12-hour format
    hours = hours % 12 || 12; // 0 should be converted to 12 for 12-hour format

    // Format the time as a string
    const formattedTime = `${hours}:${Minutes} ${meridiem}`;


    const socket = io();
    const sendBtn = document.getElementById("sendBtn");
    const messageInput = document.getElementById("message");
    // const roomIdInput = document.getElementById("roomId");
    //  const roomNameInput = document.getElementById("roomName")
    const allMessages = document.getElementById("all-messages");
    //  const myMessages = document.getElementById("my-messages");

    // getting username and roomname from  url
    const urlParams = new URLSearchParams(window.location.search);

    const userName = urlParams.get('userName');
    const roomName = urlParams.get('roomName');
    let userList = 0;

    //websocket handling
    socket.on("connect", (e) => {
        console.log("my id -", socket.id);
    })

    socket.on("receive-message", (messageData) => {

        console.log(messageData)
        const p = Object.assign(document.createElement("div"), { className: "message-list msg" });
        p.innerHTML = `<p class="senderName">${messageData.data.userName} <span>${messageData.time}</span></p>
        <p>${messageData.data.message}</p>`;
        allMessages.appendChild(p);
        allMessages.scrollTop = allMessages.scrollHeight
    });


    sendBtn.addEventListener("click", async (e) => {

        const message = messageInput.value;
        /*  await  axios.get('/user/allusers', { roomName, userName }).then(function (response) {
              console.log(response.data);
              userList = response.data;
              console.log(userList)
              // Display the response data
            })
          .catch(function (error) {
              console.error('Error making POST request:', error);
          }) */
        console.log(message, roomName, userName);
        // save messagge api calling by axios http request.
        await axios.post('/msg/message', { message, roomName, userName })
            .catch(function (error) {
                console.error('Error making POST request:', error);
            });


        socket.emit("message", { message, roomName, userName });

        const m = Object.assign(document.createElement("div"), { className: "message-list me msg" });
        m.innerHTML = `<p class="senderName">${userName} <span>${formattedTime}</span></p>
        <p>${message}</p>`;
        allMessages.appendChild(m);
        allMessages.scrollTop = allMessages.scrollHeight
        //  e.target.messageInput.value = '';
        // e.target.element.messageInput.focus() = '';


    })

    document.addEventListener('keypress', function (event) {
        // Check if the key pressed is Enter (key code 13)
        if (event.key === 'Enter' || event.keyCode === 13) {
            // Your code to execute when Enter is pressed

            const message = messageInput.value;
            console.log(message);

            // save messagge api calling by axios http request.
            axios.post('/msg/message', { message, roomName, userName })
                .catch(function (error) {
                    console.error('Error making POST request:', error);
                });

            socket.emit("message", { userName, roomName, message });

            const m = Object.assign(document.createElement("div"), { className: "message-list me msg" });
            m.innerHTML = `<p class="senderName">${userName}<span>${formattedTime}</span></p>
        <p>${message}</p>`;
            allMessages.appendChild(m);
            allMessages.scrollTop = allMessages.scrollHeight
            //  e.target.messageInput.value = '';
            // e.target.element.messageInput.focus() = '';
        }
    });



    document.addEventListener('DOMContentLoaded', function () {
        console.log(roomName);
        socket.emit("join-room", roomName);
    });


    //    joinBtn.addEventListener("click", (e) => {
    //      console.log(roomName);
    //    socket.emit("join-room", roomName);
    // })

</script>
<!-- <script>
    const ls = localStorage.getItem("selected");
let selected = false;
var list = document.querySelectorAll(".list"),
    content = document.querySelector(".content"),
    input = document.querySelector(".message-footer input"),
    open = document.querySelector(".open a");

//init
function init() {
  input.focus();
  let now = 2;
  const message = [];
  for(var i = 4; i < list.length; i++) {
    list[i].querySelector(".time").innerText = `${now} day ago`;
    list[i].querySelector(".text").innerText = message;
    now++;
  }
}
init();

//process
function process() {
  if(ls != null) {
    selected = true;
    click(list[ls], ls);
  }
  if(!selected) {
    click(list[0], 0);
  }

  list.forEach((l,i) => {
    l.addEventListener("click", function() {
      click(l, i);
    });
  });
  
  try {
    document.querySelector(".list.active").scrollIntoView(true);
  }
  catch {}
  
}
process();

//list click
function click(l, index) {
  list.forEach(x => { x.classList.remove("active"); });
  if(l) {
    l.classList.add("active");
    document.querySelector("sidebar").classList.remove("opened");
    open.innerText="UP";
    const img = l.querySelector("img").src,
          user = l.querySelector(".user").innerText,
          time = l.querySelector(".time").innerText;

    content.querySelector("img").src = img;
    content.querySelector(".info .user").innerHTML = user;
    content.querySelector(".info .time").innerHTML = time;

    const inputPH = input.getAttribute("data-placeholder");
    input.placeholder = inputPH.replace("{0}", user.split(' ')[0]);

    document.querySelector(".message-wrap").scrollTop = document.querySelector(".message-wrap").scrollHeight;
    
    localStorage.setItem("selected", index);
  }
}


</script> -->

<style>
    * {
        margin: 0;
        padding: 0;
        border: 0;
        box-sizing: border-box;
        font: 16px sans-serif;
    }

    :focus {
        outline: 0;
    }

    a {
        text-decoration: none;
    }

    body {
        background: #F4F7F9;
    }

    html,
    body {
        height: 100% !important;
    }

    .container {
        display: flex;
        height: 100% !important;
    }

    /* //sidebar */
    sidebar {
        width: 300px;
        min-width: 300px;
        display: flex;
        background: #fff;
        flex-direction: column;
        border-right: 1px solid #ccc;
        transition: 500ms all;

        .logo {
            display: flex;
            margin: 10px 0 0 0;
            padding-bottom: 27px;
            align-items: center;
            justify-content: center;
            color: #000;
            font-size: 2em;
            letter-spacing: 7px;
            border-bottom: 1px solid #ccc;
        }

        .list-wrap {
            width: 100%;
            overflow: auto;

            /* //list */
            .list {
                border-bottom: 1px solid #ccc;
                background: #fff;
                display: flex;
                align-items: center;
                padding: 5px;
                height: 70px;
                cursor: pointer;

                &:hover,
                &.active {
                    background: #F4F7F9;
                }

                img {
                    border-radius: 50%;
                    width: 50px;
                    height: 50px;
                    object-fit: cover;
                    margin-right: 10px;
                    box-shadow: 1px 2px 3px rgba(0, 0, 0, 0.5);
                }

                /* //info */
                .info {
                    flex: 1;

                    .user {
                        font-weight: 700;
                    }

                    .text {
                        display: flex;
                        margin-top: 3px;
                        font-size: 0.85em;
                    }
                }

                .time {
                    margin-right: 5px;
                    margin-left: 5px;
                    font-size: 0.75em;
                    color: #a9a9a9;
                }

                .count {
                    font-size: 0.75em;
                    background: #bde2f7;
                    box-shadow: 0 5px 15px -5px rgba(0, 0, 0, .7);
                    padding: 3px;
                    width: 20px;
                    height: 20px;
                    border-radius: 50%;
                    text-align: center;
                    color: #000;
                }
            }
        }
    }

    /* //content */
    .content {
        flex: 1;
        display: flex;
        flex-direction: column;

        /* //header */
        header {
            height: 76px;
           /* background: #fff; */
            border-bottom: 1px solid #ccc;
            display: flex;
            padding: 10px;
            align-items: center;

            img {
                border-radius: 50%;
                width: 50px;
                height: 50px;
                object-fit: cover;
                margin-right: 10px;
                box-shadow: 1px 2px 3px rgba(0, 0, 0, 0.5);
            }

            /* //info */
            .info {
                flex: 1;

                .user {
                    font-weight: 700;
                }

                .time {
                    display: flex;
                    margin-top: 3px;
                    font-size: 0.85em;
                }
            }

            .open {
                display: none;

                a {
                    color: #000;
                    letter-spacing: 3px;
                }
            }
        }
    }

    /* //message wrap */
    .message-wrap {
        flex: 1;
        display: flex;
        flex-direction: column;
        padding: 15px;
        overflow: auto;

        &::before {
            content: '';
            margin-bottom: auto;
        }

        /* //msg list */
        .message-list {
            align-self: flex-start;
            max-width: 70%;

        }

        .msg {
            background: #fff;
            box-shadow: 0 5px 15px -5px rgba(0, 0, 0, .1);
            padding: 10px 5px;
            margin-bottom: 10px;
            border-radius: 5px;
        }

        .me {
            align-self: flex-end;

            background: #a729d1;
            color: #111;
        }


        .time {
            text-align: right;
            color: #999;
            font-size: 0.75em;
        }
    }

    .senderName {
        text-align: left;
        color: #999;
        margin-top: -2px;
        /*  // font-size: 0.75em; */
        margin-bottom: 4px;
    }

    /* //msg footer */
    .message-footer {
      /*  border-top: 1px solid #ddd;
        background: #eee; */
        padding: 10px;
        display: flex;
        flex-direction: column;
/*
        #sendBtn {
            width: 100px;
            height: 40px;
            margin-left: 15px;
        }
*/
        input {
            flex: 1;
            margin-left: 15px;
            padding: 0 20px;
            border-radius: 5px;
        }

    }

    @media only screen and(max-width: 480px),
    only screen and(max-width: 767px) {
        sidebar {
            position: absolute;
            width: 100%;
            min-width: 100%;
            height: 0vh;
            bottom: 0;
            box-shadow: 0 5px 25px -5px rgba(0, 0, 0, 1);

            &.opened {
                height: 70vh !important;
            }

            .logo {
                display: none;
            }

            /* //list wrap */
            .list-wrap {
                .list {
                    .count {
                        font-size: 0.75em;
                    }
                }
            }
        }

        header {
            .open {
                display: block !important;
            }
        }
    }




    /*

    new ui css
    */

    .--dark-theme {
        --chat-background: rgba(10, 14, 14, 0.95);
        --chat-panel-background: #131719;
        --chat-bubble-background: #14181a;
        --chat-bubble-active-background: #171a1b;
        --chat-add-button-background: #212324;
        --chat-send-button-background: #8147fc;
        --chat-text-color: #a3a3a3;
        --chat-options-svg: #a3a3a3;
    }

    body {
        background: url(https://images.unsplash.com/photo-1495808985667-ba4ce2ef31b3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80);
        background-size: cover;
    }

    #chat {
      background: var(--chat-background); 
        max-width: 600px;
        margin: 25px auto;
        box-sizing: border-box;
        /* padding: 1em; */
        border-radius: 12px;
        position: relative;
        overflow: hidden;
    }

    #chat::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        /* background: url(https://images.unsplash.com/photo-1495808985667-ba4ce2ef31b3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80) fixed; */
        z-index: -1;
    }

    #chat .btn-icon {
        position: relative;
        cursor: pointer;
    }

    #chat .btn-icon svg {
       stroke: #FFF; 
        fill: #FFF; 
        width: 50%;
        height: auto;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    #chat .chat__conversation-board {
        padding: 1em 0 2em;
        height: calc(100vh - 55px - 2em - 25px * 2 - .5em - 3em);
        overflow: auto;
    }

    #chat .chat__conversation-board__message__bubble:active {
     background: var(--chat-bubble-active-background); 
    }

    #chat .chat__conversation-panel {
        background: var(--chat-panel-background); 
        border-radius: 12px;
        padding: 0 1em;
        height: 55px;
        margin: 0.5em 0 0;
    }

    #chat .chat__conversation-panel__container {
        display: flex;
        flex-direction: row;
        align-items: center;
        height: 100%;
    }

    #chat .chat__conversation-panel__container .panel-item:not(:last-child) {
        margin: 0 1em 0 0;
    }

    #chat .chat__conversation-panel__button {
        background: grey;
        height: 20px;
        width: 30px;
        border: 0;
        padding: 0;
        outline: none;
        cursor: pointer;
    }

    #chat .chat__conversation-panel .send-message-button {
        background: var(--chat-send-button-background);
        height: 30px;
        min-width: 30px;
        border-radius: 50%;
        transition: 0.3s ease;
    }

    #chat .chat__conversation-panel .send-message-button:active {
        transform: scale(0.97);
    }

    #chat .chat__conversation-panel .send-message-button svg {
        margin: 2px -2px;
    }

    #chat .chat__conversation-panel__input {
        width: 100%;
        height: 100%;
        outline: none;
        position: relative;
        color:   var(--chat-text-color) ;
        font-size: 13px;
        background: transparent;
        border: 0;
        font-family: "Lato", sans-serif;
        resize: none;
    }

    @media only screen and (max-width: 600px) {
        #chat {
            margin: 0;
            border-radius: 0;
        }

        #chat .chat__conversation-board {
            height: calc(100vh - 55px - 2em - .5em - 3em);
        }

        #chat .chat__conversation-board__message__options {
            display: none !important;
        }
    }



    /* diff css */
    .menu {
        /* position: fixed; */
        display: flex;
        color: #f11313;
        /* margin: -10px; */
        top: 0px;
        left: 0px;
        right: 0px;
        font-size: 700;
        width: 100%;
        /* height: 60px; */
        /* margin-left: 40px; */
        
        justify-content: center;
        z-index: 100;
        flex-direction: column;
        /* -webkit-touch-callout: none; */
        /* -webkit-user-select: none; */
        /* -moz-user-select: none; */
        /* -ms-user-select: none; */

    }

    .menu h2{
        font-size: larger;
        font-weight: 600;
    }
</style>

</html>